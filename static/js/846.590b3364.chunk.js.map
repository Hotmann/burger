{"version":3,"file":"static/js/846.590b3364.chunk.js","mappings":"2NAuCA,EAnCc,SAACA,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAG9B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACxC,OACE,kBACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OANb,UAUGN,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,MAQOG,EAAGJ,SAMd,OACE,iBAAKW,UAAU,QAAf,WACE,yCAAiBT,MACjB,oCACS,qCAAaU,OAAOC,WAAWjB,EAAMkB,OAAOC,QAAQ,a,wCCxB7DC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAiBH,OAjBGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACJ,WACEC,KAAKrB,MAAMsB,cAAcD,KAAKrB,MAAMuB,MAAOF,KAAKrB,MAAMwB,UACvD,oBAED,WACE,IAAIC,GAAS,SAACC,EAAA,EAAD,IAUb,OATKL,KAAKrB,MAAM2B,UACdF,EAASJ,KAAKrB,MAAMyB,OAAOlB,KAAI,SAACqB,GAAD,OAC7B,SAAC,EAAD,CAEE3B,YAAa2B,EAAM3B,YACnBiB,MAAOU,EAAMV,OAFRU,EAAMC,SAMV,yBAAMJ,QACd,EAjBGL,CAAeU,EAAAA,WAoCrB,GAAeC,EAAAA,EAAAA,KAhBS,SAACC,GACvB,MAAO,CACLP,OAAQO,EAAMJ,MAAMH,OACpBE,QAASK,EAAMJ,MAAMD,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,WAII,SAACU,GAC1B,MAAO,CACLZ,cAAe,SAACC,EAAOC,GAAR,OACbU,EAASC,EAAAA,GAAoBZ,EAAOC,QAI1C,EAGEY,EAAAA,EAAAA,GAAiBhB,EAAQiB,EAAAA","sources":["components/Order/Order.js","containers/Orders/Orders.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Order.css\";\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n  const ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n        }}\r\n        key={ig.name}\r\n      >\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"Order\">\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.orders.map((order) => (\r\n        <Order\r\n          key={order.id}\r\n          ingredients={order.ingredients}\r\n          price={order.price}\r\n        />\r\n      ));\r\n    }\r\n    return <div>{orders}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"names":["props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","className","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"sourceRoot":""}